// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type SibraPCBExt struct{ capnp.Struct }

// SibraPCBExt_TypeID is the unique identifier for the type SibraPCBExt.
const SibraPCBExt_TypeID = 0xb8fde9b959e9608d

func NewSibraPCBExt(s *capnp.Segment) (SibraPCBExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return SibraPCBExt{st}, err
}

func NewRootSibraPCBExt(s *capnp.Segment) (SibraPCBExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return SibraPCBExt{st}, err
}

func ReadRootSibraPCBExt(msg *capnp.Message) (SibraPCBExt, error) {
	root, err := msg.RootPtr()
	return SibraPCBExt{root.Struct()}, err
}

func (s SibraPCBExt) String() string {
	str, _ := text.Marshal(0xb8fde9b959e9608d, s.Struct)
	return str
}

func (s SibraPCBExt) Id() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SibraPCBExt) HasId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s SibraPCBExt) SetId(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s SibraPCBExt) Info() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s SibraPCBExt) HasInfo() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s SibraPCBExt) SetInfo(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s SibraPCBExt) Up() bool {
	return s.Struct.Bit(0)
}

func (s SibraPCBExt) SetUp(v bool) {
	s.Struct.SetBit(0, v)
}

func (s SibraPCBExt) Sofs() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.DataList{List: p.List()}, err
}

func (s SibraPCBExt) HasSofs() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s SibraPCBExt) SetSofs(v capnp.DataList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewSofs sets the sofs field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s SibraPCBExt) NewSofs(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// SibraPCBExt_List is a list of SibraPCBExt.
type SibraPCBExt_List struct{ capnp.List }

// NewSibraPCBExt creates a new list of SibraPCBExt.
func NewSibraPCBExt_List(s *capnp.Segment, sz int32) (SibraPCBExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return SibraPCBExt_List{l}, err
}

func (s SibraPCBExt_List) At(i int) SibraPCBExt { return SibraPCBExt{s.List.Struct(i)} }

func (s SibraPCBExt_List) Set(i int, v SibraPCBExt) error { return s.List.SetStruct(i, v.Struct) }

func (s SibraPCBExt_List) String() string {
	str, _ := text.MarshalList(0xb8fde9b959e9608d, s.List)
	return str
}

// SibraPCBExt_Promise is a wrapper for a SibraPCBExt promised by a client call.
type SibraPCBExt_Promise struct{ *capnp.Pipeline }

func (p SibraPCBExt_Promise) Struct() (SibraPCBExt, error) {
	s, err := p.Pipeline.Struct()
	return SibraPCBExt{s}, err
}

type SibraPayload struct{ capnp.Struct }

// SibraPayload_TypeID is the unique identifier for the type SibraPayload.
const SibraPayload_TypeID = 0xf231c8f55f84c390

func NewSibraPayload(s *capnp.Segment) (SibraPayload, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SibraPayload{st}, err
}

func NewRootSibraPayload(s *capnp.Segment) (SibraPayload, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SibraPayload{st}, err
}

func ReadRootSibraPayload(msg *capnp.Message) (SibraPayload, error) {
	root, err := msg.RootPtr()
	return SibraPayload{root.Struct()}, err
}

func (s SibraPayload) String() string {
	str, _ := text.Marshal(0xf231c8f55f84c390, s.Struct)
	return str
}

// SibraPayload_List is a list of SibraPayload.
type SibraPayload_List struct{ capnp.List }

// NewSibraPayload creates a new list of SibraPayload.
func NewSibraPayload_List(s *capnp.Segment, sz int32) (SibraPayload_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SibraPayload_List{l}, err
}

func (s SibraPayload_List) At(i int) SibraPayload { return SibraPayload{s.List.Struct(i)} }

func (s SibraPayload_List) Set(i int, v SibraPayload) error { return s.List.SetStruct(i, v.Struct) }

func (s SibraPayload_List) String() string {
	str, _ := text.MarshalList(0xf231c8f55f84c390, s.List)
	return str
}

// SibraPayload_Promise is a wrapper for a SibraPayload promised by a client call.
type SibraPayload_Promise struct{ *capnp.Pipeline }

func (p SibraPayload_Promise) Struct() (SibraPayload, error) {
	s, err := p.Pipeline.Struct()
	return SibraPayload{s}, err
}

const schema_d7ac72be29310d11 = "x\xdal\x8e\xb1J\xf3P\x18\x86\xdf\xf7\xfb\x92?K" +
	"\xd3\xf6\xd0\xc0/\xde\x81\x0eJV'Q\xdcsp\x12" +
	"\x04{4\x96\x06j\x13\x1a\x05\xdd\xbb\x0a\xbd\x10/@" +
	"\x17\x07]\xc4\x1b\x10/@\xa4\xa3B\x07\x07\x89\x1cA" +
	"pp\xfax\xbe\xf7\x19\x9e\xeelS\xd2\xf0\xbf\x00v" +
	")\xfc\xd7\\\xf6\xe7{7\xf3\xcfk\xd8\x16\xd9\x988" +
	"]\xb9\x9d\\=!\xd4\x080ow\xe6\xc3\xdf\xc5+" +
	"\xd8\xcc\xee\xa7\x07\x8b\x87\xf4\x1d\xa6\xf5K\x0c\"\xa0\xf7" +
	"\xcc\xc7\xde\x0b#\xac7uq8qkGN\xaaq" +
	"\xb5\xb1\xeb!\xdb\xde\xda9?EF\xda\xae\x06@@" +
	"\xc0\xb8e\xc0\xee+\xedPh\xc8\x84\xfey\xbc\x0a\xd8" +
	"\xbe\xd2\x8e\x84\x94\x84\x02\x98\xc2\x8b\xb9\xd2VB\xa3\x92" +
	"P\x01s\xe2\xc5\xa1\xd2N\x85Z\xe4\x8c!\x8c\xc1N" +
	"1\x1e\x94?\xa0g\x15\x09!\xc1N]\x0ej\xb6\xc1" +
	"L\xf9=\xb7\xc1\xbfB\xdd\xc5\xa8t9|\xeaW\x00" +
	"\x00\x00\xff\xff\xaf\xadB\x82"

func init() {
	schemas.Register(schema_d7ac72be29310d11,
		0xb8fde9b959e9608d,
		0xf231c8f55f84c390)
}
