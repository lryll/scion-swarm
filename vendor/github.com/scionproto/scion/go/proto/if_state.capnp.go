// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type IFStateInfo struct{ capnp.Struct }

// IFStateInfo_TypeID is the unique identifier for the type IFStateInfo.
const IFStateInfo_TypeID = 0xc778fb6f09a6fd58

func NewIFStateInfo(s *capnp.Segment) (IFStateInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return IFStateInfo{st}, err
}

func NewRootIFStateInfo(s *capnp.Segment) (IFStateInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return IFStateInfo{st}, err
}

func ReadRootIFStateInfo(msg *capnp.Message) (IFStateInfo, error) {
	root, err := msg.RootPtr()
	return IFStateInfo{root.Struct()}, err
}

func (s IFStateInfo) String() string {
	str, _ := text.Marshal(0xc778fb6f09a6fd58, s.Struct)
	return str
}

func (s IFStateInfo) IfID() uint64 {
	return s.Struct.Uint64(0)
}

func (s IFStateInfo) SetIfID(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s IFStateInfo) Active() bool {
	return s.Struct.Bit(64)
}

func (s IFStateInfo) SetActive(v bool) {
	s.Struct.SetBit(64, v)
}

func (s IFStateInfo) SRevInfo() (SignedBlob, error) {
	p, err := s.Struct.Ptr(0)
	return SignedBlob{Struct: p.Struct()}, err
}

func (s IFStateInfo) HasSRevInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s IFStateInfo) SetSRevInfo(v SignedBlob) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSRevInfo sets the sRevInfo field to a newly
// allocated SignedBlob struct, preferring placement in s's segment.
func (s IFStateInfo) NewSRevInfo() (SignedBlob, error) {
	ss, err := NewSignedBlob(s.Struct.Segment())
	if err != nil {
		return SignedBlob{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// IFStateInfo_List is a list of IFStateInfo.
type IFStateInfo_List struct{ capnp.List }

// NewIFStateInfo creates a new list of IFStateInfo.
func NewIFStateInfo_List(s *capnp.Segment, sz int32) (IFStateInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return IFStateInfo_List{l}, err
}

func (s IFStateInfo_List) At(i int) IFStateInfo { return IFStateInfo{s.List.Struct(i)} }

func (s IFStateInfo_List) Set(i int, v IFStateInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateInfo_List) String() string {
	str, _ := text.MarshalList(0xc778fb6f09a6fd58, s.List)
	return str
}

// IFStateInfo_Promise is a wrapper for a IFStateInfo promised by a client call.
type IFStateInfo_Promise struct{ *capnp.Pipeline }

func (p IFStateInfo_Promise) Struct() (IFStateInfo, error) {
	s, err := p.Pipeline.Struct()
	return IFStateInfo{s}, err
}

func (p IFStateInfo_Promise) SRevInfo() SignedBlob_Promise {
	return SignedBlob_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type IFStateInfos struct{ capnp.Struct }

// IFStateInfos_TypeID is the unique identifier for the type IFStateInfos.
const IFStateInfos_TypeID = 0xd320ce32f5fc0bbe

func NewIFStateInfos(s *capnp.Segment) (IFStateInfos, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return IFStateInfos{st}, err
}

func NewRootIFStateInfos(s *capnp.Segment) (IFStateInfos, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return IFStateInfos{st}, err
}

func ReadRootIFStateInfos(msg *capnp.Message) (IFStateInfos, error) {
	root, err := msg.RootPtr()
	return IFStateInfos{root.Struct()}, err
}

func (s IFStateInfos) String() string {
	str, _ := text.Marshal(0xd320ce32f5fc0bbe, s.Struct)
	return str
}

func (s IFStateInfos) Infos() (IFStateInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return IFStateInfo_List{List: p.List()}, err
}

func (s IFStateInfos) HasInfos() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s IFStateInfos) SetInfos(v IFStateInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInfos sets the infos field to a newly
// allocated IFStateInfo_List, preferring placement in s's segment.
func (s IFStateInfos) NewInfos(n int32) (IFStateInfo_List, error) {
	l, err := NewIFStateInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return IFStateInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// IFStateInfos_List is a list of IFStateInfos.
type IFStateInfos_List struct{ capnp.List }

// NewIFStateInfos creates a new list of IFStateInfos.
func NewIFStateInfos_List(s *capnp.Segment, sz int32) (IFStateInfos_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return IFStateInfos_List{l}, err
}

func (s IFStateInfos_List) At(i int) IFStateInfos { return IFStateInfos{s.List.Struct(i)} }

func (s IFStateInfos_List) Set(i int, v IFStateInfos) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateInfos_List) String() string {
	str, _ := text.MarshalList(0xd320ce32f5fc0bbe, s.List)
	return str
}

// IFStateInfos_Promise is a wrapper for a IFStateInfos promised by a client call.
type IFStateInfos_Promise struct{ *capnp.Pipeline }

func (p IFStateInfos_Promise) Struct() (IFStateInfos, error) {
	s, err := p.Pipeline.Struct()
	return IFStateInfos{s}, err
}

type IFStateReq struct{ capnp.Struct }

// IFStateReq_TypeID is the unique identifier for the type IFStateReq.
const IFStateReq_TypeID = 0xe8ed776bc19c66a9

func NewIFStateReq(s *capnp.Segment) (IFStateReq, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return IFStateReq{st}, err
}

func NewRootIFStateReq(s *capnp.Segment) (IFStateReq, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return IFStateReq{st}, err
}

func ReadRootIFStateReq(msg *capnp.Message) (IFStateReq, error) {
	root, err := msg.RootPtr()
	return IFStateReq{root.Struct()}, err
}

func (s IFStateReq) String() string {
	str, _ := text.Marshal(0xe8ed776bc19c66a9, s.Struct)
	return str
}

func (s IFStateReq) IfID() uint64 {
	return s.Struct.Uint64(0)
}

func (s IFStateReq) SetIfID(v uint64) {
	s.Struct.SetUint64(0, v)
}

// IFStateReq_List is a list of IFStateReq.
type IFStateReq_List struct{ capnp.List }

// NewIFStateReq creates a new list of IFStateReq.
func NewIFStateReq_List(s *capnp.Segment, sz int32) (IFStateReq_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return IFStateReq_List{l}, err
}

func (s IFStateReq_List) At(i int) IFStateReq { return IFStateReq{s.List.Struct(i)} }

func (s IFStateReq_List) Set(i int, v IFStateReq) error { return s.List.SetStruct(i, v.Struct) }

func (s IFStateReq_List) String() string {
	str, _ := text.MarshalList(0xe8ed776bc19c66a9, s.List)
	return str
}

// IFStateReq_Promise is a wrapper for a IFStateReq promised by a client call.
type IFStateReq_Promise struct{ *capnp.Pipeline }

func (p IFStateReq_Promise) Struct() (IFStateReq, error) {
	s, err := p.Pipeline.Struct()
	return IFStateReq{s}, err
}

const schema_e6d9e9e231c09f51 = "x\xdat\x90=K#Q\x18\x85\xcfy\xefd\xb3a" +
	"?2\xc3\xa4\xdf-\xb6\x0a\xcbB\xd2,\xa4I\x8a\xec" +
	".\xb3D\xc8\x8dM\xac$\x84\x19\x18\x84\x99\x84\x09Q" +
	"\x0bK\xff\x85\x90NH%\x16\xb6\xa2\x95\x95\x0a\x8aE" +
	"l\x84\x08\xa2\x85\xa5\x8d\x1f\x8cL\x10\x95@\xbas\x0f" +
	"\x0f\x0f\xe7\xbe\xe6EE\x0a\xa9c\x05\xe8\x9f\xa9\x0fq" +
	"\xf3i3\x13>\xac\x1c@g)\xb1\x1e\xec\x15\xc67" +
	"\xa3+\xa4\x98\x06\xecC\x9e\xdb\xa3I:\xe3\x16\x18\xef" +
	"~z\xbc+\x1e}?\x85\x95\xe54\xdb\x95\xb1\xbd&" +
	"IZ\x952\x18\x0f\xbd\x8d\xfd\xa5\xe5\xdb\xebD\xfc\x0e" +
	"6\x12b('\xf6\xce\x84\xdd\x962\x16b\xdf[\x8c" +
	"z\xad\x9e+\xbf\xda\xadN\xd0)9\x7f\xe7\x93\xa7\x13" +
	"(/\xac\x93\xfa\xb32\x00\x83\x80\xf5'\x0f\xe8\x8a\xa2" +
	"\xae\x09-VrLJ\xa7\x04\xe8\xaa\xa2\xae\x0b)9" +
	"\x0a`\xcd\xfd\x07tMQ7\x85Y\xdfs\xaa\xcc@" +
	"\x98\x01\xcb\xadv\xcf\xef\xbb$\x84\x04\xe3\xa8\xe1\xf6\x9d" +
	"\xc0\x0b\x01\xd0\x8c\x1b\x97\xf7\xbf\xd7\xff\x15\x07\x00i\x82" +
	"\xb3\x97\xa5\xbd0J\xa6\x19\xaf\xd3\xbe\x14\x01\xfdQQ" +
	"\xff\x10~\xf3\x03/\x8c\xf8\x15\xac+\xd2|\xbb2\x98" +
	"\x94\xb3\xb4\x0d\x97\xdd)i\xfeE\x9a\x9b\xfa\xc6s\x00" +
	"\x00\x00\xff\xff\xe8\xd4u\xfe"

func init() {
	schemas.Register(schema_e6d9e9e231c09f51,
		0xc778fb6f09a6fd58,
		0xd320ce32f5fc0bbe,
		0xe8ed776bc19c66a9)
}
